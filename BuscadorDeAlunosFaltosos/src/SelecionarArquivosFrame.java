
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import model.Aluno;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Arley Novais
 */
public class SelecionarArquivosFrame extends javax.swing.JFrame {

    
    ArrayList<Aluno> listaAlunos;
    String filePath;
    /**
     * Creates new form SelecionarArquivosFrame
     */
    public SelecionarArquivosFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBuscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        btnBuscar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar);
        btnBuscar.setBounds(260, 170, 170, 70);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Clique no botão para selecionar o arquivo com os alunos presentes");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 14, 690, 70);

        setSize(new java.awt.Dimension(703, 342));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Selecionar Arquivo");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivo CSV", "csv");
        fileChooser.setFileFilter(filter);
        int retorno = fileChooser.showOpenDialog(this);
        if (retorno == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            listaAlunos = geraListaAlunos(file.getPath());
            listaAlunos = eliminaRepetidos(listaAlunos);
            listaAlunos = getAusentes(getListaGeral(), listaAlunos);
            gerarTxtAusentes(listaAlunos);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    
    public ArrayList<Aluno> eliminaRepetidos(ArrayList<Aluno> lista) {
        ArrayList<Aluno> listSemRepetidos = new ArrayList<Aluno>();

        for (Aluno aluno : lista) {
            if (!listSemRepetidos.contains(aluno)) {
                listSemRepetidos.add(aluno);
            }
        }

        System.out.println("\n\nNA LISTA DE ELIMINIDOS HÁ: \n\n" + listSemRepetidos.size());

        for (int i = 0; i < listSemRepetidos.size(); i++) {
            System.out.println(listSemRepetidos.get(i).toString());
        }

        return listSemRepetidos;
    }

    public ArrayList<Aluno> geraListaAlunos(String path) {

        ArrayList<Aluno> list = new ArrayList<Aluno>();

        try {
            FileInputStream fis = new FileInputStream(path);
            InputStreamReader isr = new InputStreamReader(fis);
            BufferedReader br = new BufferedReader(isr);

            String linha;

            br.readLine();
            do {
                linha = br.readLine();
                if (linha != null) {
                    String[] alunoInformacoes = linha.split(",");
                    String nome = alunoInformacoes[1].trim();
                    String turma = alunoInformacoes[2].trim();

                    if (!nome.isEmpty() && !turma.isEmpty()) {
                        Aluno aluno = new Aluno(nome, turma);
                        list.add(aluno);
                    }
                }
            } while (linha != null);

        } catch (Exception e) {
            System.out.println("Deu merda");
        }

        System.out.println("NA LISTA TODAA HÁ: " + list.size());

        for (int i = 0; i < list.size(); i++) {
            System.out.println(list.get(i).toString());
        }

        return list;
    }
    
    public ArrayList<Aluno> getAusentes(ArrayList<Aluno> listaGeral, ArrayList<Aluno> listaFrequencia) {
        ArrayList<Aluno> listaAusentes = new ArrayList<Aluno>();

        for (Aluno freq : listaGeral) {
            if (!listaFrequencia.contains(freq)) {
                listaAusentes.add(freq);
            }
        }

        System.out.println("\n\n\n\nAUSENTES\n\n");

        System.out.println("HÁ " + listaAusentes.size() + "AUSENTES");

        for (int i = 0; i < listaAusentes.size(); i++) {
            System.out.println(listaAusentes.get(i).toString());
        }

        return listaAusentes;
    }

    public void gerarTxtAusentes(ArrayList<Aluno> listaAusentes) {
        try {
            FileSystemView system = FileSystemView.getFileSystemView();
            String path = system.getHomeDirectory().getPath() + File.separator + "ALUNOS-AUSENTES.txt";
            FileOutputStream fos = new FileOutputStream(path);
            PrintWriter pr = new PrintWriter(fos);
            
            pr.print("ALUNOS AUSENTES\n");
            
            pr.print("\n1AE\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("1AE")){
                    pr.print(listaAusentes.get(i).getNome() + "\n");
                }
            }
            
            pr.print("\n1BE\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("1BE")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n2AE\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("2AE")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n2BE\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("2BE")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n3AE\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("3AE")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n3BE\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("3BE")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n1AI\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("1AI")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n1BI\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("1BI")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n1CI\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("1CI")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n2AI\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("2AI")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n2BI\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("2BI")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n2CI\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("2CI")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n3AI\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("3AI")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n3BI\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("3BI")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n3CI\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("3CI")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n1AM\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("1AM")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n1BM\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("1BM")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n1CM\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("1CM")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n2AM\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("2AM")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n2BM\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("2BM")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n2CM\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("2CM")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n3AM\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("3AM")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n3BM\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("3BM")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.print("\n3CM\n");
            for(int i = 0; i < listaAusentes.size(); i++){
                if(listaAusentes.get(i).getTurma().trim().equalsIgnoreCase("3CM")){
                    pr.print(listaAusentes.get(i).getNome()+ "\n");
                }
            }
            
            pr.close();
            fos.close();
            
            JOptionPane.showMessageDialog(null, "Arquivo de texto criado na área de trabalho com alunos ausentes.");
            
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    
    public ArrayList<Aluno> getListaGeral() {
        ArrayList<Aluno> list = new ArrayList<Aluno>();

        try {
            FileInputStream fis = new FileInputStream("listaGeral.csv");
            InputStreamReader isr = new InputStreamReader(fis);
            BufferedReader br = new BufferedReader(isr);

            String linha;

            br.readLine();
            do {
                linha = br.readLine();
                if (linha != null) {
                    String[] alunoInformacoes = linha.split(",");
                    String nome = alunoInformacoes[0].trim() + " " + alunoInformacoes[1].trim();
                    String turma = alunoInformacoes[3].trim().split("/")[4];

                    if (!nome.isEmpty() && !turma.isEmpty()) {
                        Aluno aluno = new Aluno(nome, turma);
                        list.add(aluno);
                    }
                }
            } while (linha != null);

        } catch (Exception e) {
            e.printStackTrace();
        }

        System.out.println("HA na lista geral" + list.size());

        for (int i = 0; i < list.size(); i++) {
            System.out.println(list.get(i).toString());
        }

        return list;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelecionarArquivosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelecionarArquivosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelecionarArquivosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelecionarArquivosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SelecionarArquivosFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
